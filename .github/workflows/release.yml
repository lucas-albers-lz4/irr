name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., v0.0.1)'
        required: true

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: 1.24
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v7
        with:
          version: v2.0

  build:
    needs: lint
    strategy:
      fail-fast: false
      matrix:
        include:
          - goos: linux
            goarch: amd64
            runner: ubuntu-latest
          - goos: linux
            goarch: arm64
            runner: ubuntu-latest
          - goos: darwin
            goarch: arm64
            runner: macos-latest

    runs-on: ${{ matrix.runner }}

    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.24
          
      - name: Print Go Version
        run: go version

      - name: Run tests
        run: |
          if [[ "${{ matrix.goos }}" == "darwin" ]]; then
            echo "Running macOS tests with enhanced debug logging..."
            IRR_TESTING=true LOG_LEVEL=DEBUG IRR_DEBUG=1 make test
          else
            make test
          fi
        
      - name: Get Version
        id: get_version
        run: echo "VERSION=$(cat plugin.yaml | grep version | awk -F'"' '{print $2}')" >> $GITHUB_OUTPUT

      - name: Build binary for ${{ matrix.goos }}/${{ matrix.goarch }}
        run: make build GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }}

      - name: Create distribution package for ${{ matrix.goos }}/${{ matrix.goarch }}
        run: |
          DIST_DIR=_dist
          PACKAGE_NAME=helm-irr-${{ steps.get_version.outputs.VERSION }}-${{ matrix.goos }}-${{ matrix.goarch }}.tar.gz
          echo "Creating $PACKAGE_NAME..."
          mkdir -p $DIST_DIR
          tar -zcvf $DIST_DIR/$PACKAGE_NAME \
            bin/irr \
            README.md \
            LICENSE \
            plugin.yaml \
            install-binary.sh
          echo "Created $DIST_DIR/$PACKAGE_NAME"

      - name: Upload artifact for ${{ matrix.goos }}/${{ matrix.goarch }}
        uses: actions/upload-artifact@v4
        with:
          name: irr-package-${{ matrix.goos }}-${{ matrix.goarch }}
          path: _dist/*.tar.gz
          retention-days: 1

  release:
    needs: build
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
          
      - name: Prepare release files
        run: |
          mkdir -p release-files
          find artifacts -name 'irr-package-*' -type d -exec find {} -name 'helm-irr-*.tar.gz' -exec cp {} release-files/ \;
          echo "Contents of release-files:"
          ls -l release-files
          
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: release-files/*.tar.gz
          draft: false
          prerelease: false
          generate_release_notes: true
          tag_name: ${{ github.event.inputs.version || github.ref_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
