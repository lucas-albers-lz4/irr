name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., v0.0.9)'
        required: true

permissions: {}  # Set default permissions to none

jobs:
  lint:
    runs-on: ubuntu-latest
    permissions:
      contents: read  # Only needs to read repository contents
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: 1.24
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v7
        with:
          version: v2.0

  build:
    needs: lint
    permissions:
      contents: read  # Only needs to read repository contents
      actions: read   # For reading actions configurations
      id-token: write # Needed for upload-artifact
    strategy:
      matrix:
        include:
          - goos: linux
            goarch: amd64
            runner: ubuntu-latest
          - goos: linux
            goarch: arm64
            runner: ubuntu-latest
          - goos: darwin
            goarch: arm64
            runner: macos-latest

    runs-on: ${{ matrix.runner }}

    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.24
          
      - name: Print Go Version
        run: go version

      - name: Install Helm if missing (macOS only)
        if: matrix.goos == 'darwin'
        run: |
          if ! command -v helm &> /dev/null; then
            echo "Helm not found. Installing via Homebrew..."
            brew install helm
          else
            echo "Helm already installed. Skipping installation."
          fi

      - name: Print Helm Version
        run: helm version
      - name: Run tests
        run: |
            make test
        
      - name: Get Version
        id: get_version
        run: echo "VERSION=$(cat plugin.yaml | grep version | awk -F'"' '{print $2}')" >> $GITHUB_OUTPUT

      - name: Build binary for ${{ matrix.goos }}/${{ matrix.goarch }}
        run: make build GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }}

      - name: Create distribution package for ${{ matrix.goos }}/${{ matrix.goarch }}
        run: |
          DIST_DIR=_dist
          PACKAGE_NAME=helm-irr-${{ steps.get_version.outputs.VERSION }}-${{ matrix.goos }}-${{ matrix.goarch }}.tar.gz
          echo "Creating $PACKAGE_NAME..."
          mkdir -p $DIST_DIR
          tar -zcvf $DIST_DIR/$PACKAGE_NAME \
            bin/irr \
            README.md \
            LICENSE \
            plugin.yaml \
            install-binary.sh
          echo "Created $DIST_DIR/$PACKAGE_NAME"

      - name: Upload artifact for ${{ matrix.goos }}/${{ matrix.goarch }}
        uses: actions/upload-artifact@v4
        with:
          name: irr-package-${{ matrix.goos }}-${{ matrix.goarch }}
          path: _dist/*.tar.gz
          retention-days: 1

  release:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
          
      - name: Prepare release files
        run: |
          mkdir -p release-files
          echo "Searching for tarballs in artifacts/"
          find artifacts/ -name 'helm-irr-*.tar.gz' -type f -print -exec cp {} release-files/ \;
          echo "Contents of release-files:"
          ls -l release-files
          
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: release-files/*.tar.gz
          draft: false
          prerelease: false
          generate_release_notes: true
          tag_name: ${{ github.event.inputs.version || github.ref_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
